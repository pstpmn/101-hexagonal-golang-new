// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	domains "lean-oauth/internal/core/domains"

	mock "github.com/stretchr/testify/mock"
)

// RegisterCategories is an autogenerated mock type for the RegisterCategories type
type RegisterCategories struct {
	mock.Mock
}

// Get provides a mock function with given fields: id
func (_m *RegisterCategories) Get(id int) (*domains.RegisterCategories, error) {
	ret := _m.Called(id)

	var r0 *domains.RegisterCategories
	if rf, ok := ret.Get(0).(func(int) *domains.RegisterCategories); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domains.RegisterCategories)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// List provides a mock function with given fields:
func (_m *RegisterCategories) List() ([]domains.RegisterCategories, error) {
	ret := _m.Called()

	var r0 []domains.RegisterCategories
	if rf, ok := ret.Get(0).(func() []domains.RegisterCategories); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domains.RegisterCategories)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewRegisterCategories interface {
	mock.TestingT
	Cleanup(func())
}

// NewRegisterCategories creates a new instance of RegisterCategories. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRegisterCategories(t mockConstructorTestingTNewRegisterCategories) *RegisterCategories {
	mock := &RegisterCategories{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
