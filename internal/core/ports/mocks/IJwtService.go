// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// IJwtService is an autogenerated mock type for the IJwtService type
type IJwtService struct {
	mock.Mock
}

// Extract provides a mock function with given fields: token, key
func (_m *IJwtService) Extract(token string, key string) (map[string]string, error) {
	ret := _m.Called(token, key)

	var r0 map[string]string
	if rf, ok := ret.Get(0).(func(string, string) map[string]string); ok {
		r0 = rf(token, key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(token, key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Generate provides a mock function with given fields: data, key, exp
func (_m *IJwtService) Generate(data map[string]interface{}, key string, exp time.Timer) (string, error) {
	ret := _m.Called(data, key, exp)

	var r0 string
	if rf, ok := ret.Get(0).(func(map[string]interface{}, string, time.Timer) string); ok {
		r0 = rf(data, key, exp)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(map[string]interface{}, string, time.Timer) error); ok {
		r1 = rf(data, key, exp)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewIJwtService interface {
	mock.TestingT
	Cleanup(func())
}

// NewIJwtService creates a new instance of IJwtService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIJwtService(t mockConstructorTestingTNewIJwtService) *IJwtService {
	mock := &IJwtService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
