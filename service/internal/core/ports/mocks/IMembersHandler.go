// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	fiber "github.com/gofiber/fiber/v2"
	mock "github.com/stretchr/testify/mock"
)

// IMembersHandler is an autogenerated mock type for the IMembersHandler type
type IMembersHandler struct {
	mock.Mock
}

// Authentication provides a mock function with given fields: c
func (_m *IMembersHandler) Authentication(c *fiber.Ctx) error {
	ret := _m.Called(c)

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// HelloWorld provides a mock function with given fields: c
func (_m *IMembersHandler) HelloWorld(c *fiber.Ctx) error {
	ret := _m.Called(c)

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Registration provides a mock function with given fields: c
func (_m *IMembersHandler) Registration(c *fiber.Ctx) error {
	ret := _m.Called(c)

	var r0 error
	if rf, ok := ret.Get(0).(func(*fiber.Ctx) error); ok {
		r0 = rf(c)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIMembersHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewIMembersHandler creates a new instance of IMembersHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIMembersHandler(t mockConstructorTestingTNewIMembersHandler) *IMembersHandler {
	mock := &IMembersHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
